①権限管理
ファイル情報として、所有者のuid、所有者とその他のユーザーの実行権限情報を付与。
所有者情報とユーザー情報の照会を行い、実行可能なコマンドを判断する。それに基づき、ファイル一覧のファイル項目1つ1つに実行可能なコマンドのボタンを表示、またはディレクトリ内のファイルに関するコマンド(差分、ディレクトリ作成、アップロード)用ボタンの有効可否を設定。

②シンボリックリンク
サーバ上にはファイルは存在しない。
アクセス時にデータベースのシンボリックリンク用のテーブルを照会し、参照するディレクトリのパスを取得する。ディレクトリ内の実行コマンドについてはシンボリックリンクの場合には全てクリアされる。

③作成、アップロードしたファイルの権限
作成、アップロードしたユーザのuidを所有者IDとして登録。実行権限はすべてのユーザが削除以外のすべての機能を利用することが可能。

④ディレクトリやファイル名の禁止ワード
ディレクトリ名やファイル名はコマンド引数として、またデータベース問い合わせの際に使用する。そのため、[  ]が禁止ワードとして設定されている。

⑤画面上部ナビゲーションメニュー
・Home
システムホーム画面に戻る。
・Terminal
カレントディレクトリテーブルを非表示にし、ターミナルを最上部に表示。
・List
カレントディレクトリテーブルを10行ごとに表示する。

⑥コマンド
・差分
左側のメニューに差を引かれる側、右側には差を引く側のテキスト系ファイル(テキスト、C、C++)として登録されているファイルを選択する。
実行結果はターミナルに表示され、'-'が行頭についている行は差を引く側で削除された行、'+'は追加された行、その他は変更なしの行を表す。
・作成
ディレクトリを新規作成する。
・Upload
ユーザ側に保存されているファイルをサーバにアップロードする。DBにはアップロード時のファイル名が、サーバにはソースファイルは拡張子をつけた状態で保存される。
また、ファイルの保存は一度multer(モジュール)のストレージとして指定されたServer/tmpディレクトリに保存し、その後リクエストの情報から取得したパスにファイルを移動する。
・移動
カレントディレクトリの変更。
・削除
ファイルまたはディレクトリのサーバからの削除。
・DP
実行ファイルのオブジェクトダンプ。実行結果はターミナルに表示される。
・表示
テキスト系ファイルの内容を表示する。表示結果はターミナルに表示される。
・CL
CまたはC++ソースファイルのコンパイル。オブジェクトファイルが生成される。生成されたオブジェクトファイルの名前は元となるファイル名に.oを付与したものになる。
コンパイラとしてclang、clang++を使用。エラーメッセージや警告はターミナルに表示される。
・DL
サーバからのファイルのダウンロード。テキスト系ファイルのみ利用可能。

⑦初期画面
ユーザのホームディレクトリが初期画面のカレントディレクトリとなる。

⑧ディレクトリエントリ
DBに格納されている。パスが格納されているため、表示の際には最後に現れる'/'以下の名前を表示する。
また、コンパイルを行うため、サーバ上では拡張子付きでファイル名が登録されており、コマンド実行の際にファイル種別に合わせ、内部で拡張子を付けたサーバ上のファイル名に変換を行なっている。
